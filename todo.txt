crear un middleware para el manejo de errores

cambiar las rutas para poder subir varias fotos de las mascotas


a単adir util.promisify

usar skip y limit para poder controlar las imagenes q necesito
agregar indices a la base de datos para acelerar


//buscar todos los httpstatus codes

incluir helmet csurf rate-limiter
realizar npm audit
a単adir sonido a la pagina

implementar scrollSpy


cambiar bcryptjs por bcrypt

revisar en los promises q para q un evento suba el q lo genera debe ser return
poner un usuario y contrase単a en mongo db
eje:

no me gusta la palabra orden prefiero pedido


las ordenes solo podran cancelarse por el usuario mientras esten en pending

decirle a jesus q elimine las animaciones para cuando no se usen ejemplo
los div.line-element en mobile no deberian animarse
eliminar las validaciones en los schemas y hacerlas antes de guardar

agregar un estilo para ul.error
a単adir un estilo para cuando no hayan nuevas mascotas
agregar el nuevo footer


como hacer q las peticiones en express se hagan en paralelo
asi sube hasta q el error es atrapado
    let fs = require("fs/promises");

    p.then((res) => {
    console.log(res);
    return fs.access("D:/xxx.xxx");
    }).catch((err) => {
    //   console.log(err);
    });
asi no lo hace
    let fs = require("fs/promises");

    p.then((res) => {
    console.log(res);
    fs.access("D:/xxx.xxx");
    }).catch((err) => {
    //   console.log(err);
    });